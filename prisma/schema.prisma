// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// this model is used by NextAuth.js
model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  // --- these fields added by this app
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([provider, providerAccountId])
  @@map("account")
}

// this model is used by NextAuth.js
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  // --- these fields added by this app
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("session")
}

model User {
  // --- these fields are used by NextAuth.js
  // 'id' is used by NextAuth.js to identify users. 
  // 'id'  is automatically generated by NextAuth.js
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]
  // --- these fields are used by custom NextAuth.js fields by this app
  // 'uid' is used by this app to identify users. 
  // 'uid' is the user identifier obtained from the IdP profile and is set by the app when the user is created.
  uid           String    @unique @default(cuid())
  roles         Json?
  claims        Json?
  // --- these fields are used by this app
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  conversations Conversation[]

  @@map("user")
}

// this model is used by NextAuth.js
model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  // --- these fields added by this app
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([identifier, token])
  @@map("verification_token")
}

model Conversation {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  title     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user User  @relation(fields: [userId], references: [id])
  chat Chat?

  @@map("conversation")
}

model Chat {
  id        String   @id @default(cuid()) // same as conversation id
  filePath  String?  @map("file_path")
  blobPath  String?  @map("blob_path")
  jsonData  Json?    @map("json_data")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  conversation Conversation @relation(fields: [id], references: [id], onDelete: Cascade)

  @@map("chat")
}
